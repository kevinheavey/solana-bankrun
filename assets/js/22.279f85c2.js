(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{304:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://raw.githubusercontent.com/kevinheavey/solana-bankrun/main/logo.png",width:"50%",height:"50%"}})]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"bankrun-deprecated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bankrun-deprecated"}},[t._v("#")]),t._v(" Bankrun (deprecated)")]),t._v(" "),a("p",[t._v("DEPRECATED: use "),a("a",{attrs:{href:"https://github.com/LiteSVM/litesvm/tree/master/crates/node-litesvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("LiteSVM"),a("OutboundLink")],1),t._v(" instead.")]),t._v(" "),a("p",[a("code",[t._v("Bankrun")]),t._v(" is a superfast, powerful and lightweight framework\nfor testing Solana programs in NodeJS.")]),t._v(" "),a("p",[t._v("While people often use "),a("code",[t._v("solana-test-validator")]),t._v(" for this,\n"),a("code",[t._v("bankrun")]),t._v(" is orders of magnitude faster and far more convenient.")]),t._v(" "),a("p",[t._v("You can also do things that are not possible with "),a("code",[t._v("solana-test-validator")]),t._v(",\nsuch as jumping back and forth in time or dynamically setting account data.")]),t._v(" "),a("p",[t._v("If you've used "),a("a",{attrs:{href:"https://crates.io/crates/solana-program-test",target:"_blank",rel:"noopener noreferrer"}},[t._v("solana-program-test"),a("OutboundLink")],1),t._v("\nyou'll be familiar with "),a("code",[t._v("bankrun")]),t._v(", since that's what it uses under the hood.")]),t._v(" "),a("p",[t._v("For those unfamiliar, "),a("code",[t._v("bankrun")]),t._v(" and "),a("code",[t._v("solana-program-test")]),t._v(" work by spinning up a lightweight\n"),a("code",[t._v("BanksServer")]),t._v(" that's like an RPC node but much faster, and creating a "),a("code",[t._v("BanksClient")]),t._v(" to talk to the\nserver. This author thought "),a("code",[t._v("solana-program-test")]),t._v(" was a boring name, so he chose "),a("code",[t._v("bankrun")]),t._v(" instead\n(you're running Solana "),a("a",{attrs:{href:"https://github.com/solana-labs/solana/blob/master/runtime/src/bank.rs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Banks"),a("OutboundLink")],1),t._v(").")]),t._v(" "),a("h2",{attrs:{id:"minimal-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minimal-example"}},[t._v("#")]),t._v(" Minimal example")]),t._v(" "),a("p",[t._v("This example just transfers lamports from Alice to Bob without loading\nany programs of our own. It uses the "),a("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jest"),a("OutboundLink")],1),t._v("\ntest runner but you can use any test runner you like.")]),t._v(" "),a("p",[t._v("Note: If you have multiple test files you should disable parallel tests using the "),a("code",[t._v("--runInBand")]),t._v(" Jest flag for now.\nThere is an "),a("a",{attrs:{href:"https://github.com/kevinheavey/solana-bankrun/issues/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("open issue"),a("OutboundLink")],1),t._v("\nwhere concurrent Jest tests occasionally fail due to the program name getting garbled.")]),t._v(" "),a("p",[t._v("Note: The underlying Rust process may print a lot of logs. You can control these with the "),a("code",[t._v("RUST_LOG")]),t._v(" environment variable. If you want to silence these logs your test command would look like "),a("code",[t._v("RUST_LOG= jest --runInBand")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"solana-bankrun"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" PublicKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Transaction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SystemProgram "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@solana/web3.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"one transfer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("banksClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" payer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PublicKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" blockhash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastBlockhash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" transferLamports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1_000_000n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ixs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\tSystemProgram"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transfer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfromPubkey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" payer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("publicKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\ttoPubkey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tlamports"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" transferLamports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ttx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recentBlockhash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" blockhash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ttx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("ixs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ttx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("processTransaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" balanceAfter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBalance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("balanceAfter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transferLamports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Some things to note here:")]),t._v(" "),a("ul",[a("li",[t._v("The "),a("code",[t._v("context")]),t._v(" object contains a "),a("code",[t._v("banks_client")]),t._v(" to talk to the "),a("code",[t._v("BanksServer")]),t._v(",\na "),a("code",[t._v("payer")]),t._v(" keypair that has been funded with a bunch of SOL, and a "),a("code",[t._v("last_blockhash")]),t._v("\nthat we can use in our transactions.")]),t._v(" "),a("li",[t._v("We haven't loaded any specific programs, but by default we have access to\nthe System Program, the SPL token programs and the SPL memo program.")])]),t._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yarn add solana-bankrun\n")])])]),a("h2",{attrs:{id:"contributing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contributing"}},[t._v("#")]),t._v(" Contributing")]),t._v(" "),a("p",[t._v("Make sure you have Yarn and the Rust toolchain installed.")]),t._v(" "),a("p",[t._v("Then run "),a("code",[t._v("yarn")]),t._v(" to install deps, run "),a("code",[t._v("yarn build")]),t._v(" to build the binary and "),a("code",[t._v("yarn test")]),t._v(" to run the tests.")])])}),[],!1,null,null,null);a.default=e.exports}}]);